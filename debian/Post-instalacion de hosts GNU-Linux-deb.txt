
Post-instalación de hosts GNU/Linux Debian 9 STRETCH

Contenidos:

1 Repositorios software y actualización de sistemas:
	1.1 Configuración de repositorios
	1.2 Actualizar Sistema

2 Configuración de los sistemas:
	2.1 Instalar Pqtes. básicos
	2.2 Configurar Zona horaria
	2.3 Sincronizar reloj de sistema mediante NTP
	2.4 Activar rc.local

3 Optimizaciones:
	3.1 Disco y Filesystems
	3.2 RNG-Tools
	3.3 Actualización del firmware microcode de la CPU
	3.4 Bonding
	3.5 Deshabilitar IPv6

4 Instalar y securizar servicios:
	4.1 Servicio SSH
	4.2 Tcp Wrappers
	4.3 Portmap
	4.4 Fail2ban

5 Monitoreo e inventario de sistemas:
	5.1 SNMP
	5.2 Instalar NRPE (Nagios)
	5.3 Registrar en SIEM Prelude
	5.4 OCS Inventory


1 Repositorios software y actualización de sistemas:


1.1 Configuración de repositorios:


Editar el archivo /etc/apt/sources.list, deberá contener sólo las siguientes lineas:


deb http://security.debian.org/ stretch/updates main contrib non-free
deb-src http://security.debian.org/ stretch/updates main contrib non-free

deb http://ftp.cl.debian.org/debian/ stretch main contrib non-free
deb-src http://ftp.cl.debian.org/debian/ stretch main contrib non-free

deb http://ftp.cl.debian.org/debian/ stretch-updates main contrib non-free
deb-src http://ftp.cl.debian.org/debian/ stretch-updates main contrib non-free



1.2 Actualizar Sistema:

Ahora proceder con la actualización masiva del sistema:

# apt-get update

# apt-get upgrade

o todo en una linea:

# apt-get update ; apt-get -y upgrade



Nota es solo para Desktop con repositorios agregados: Si lo anterior da un problema del tipo:

"W: No existe ninguna clave pública disponible para los siguientes identificadores de clave:
7638D0442B90D010
W: No existe ninguna clave pública disponible para los siguientes identificadores de clave:
9D6D8F6BC857C906
W: No existe ninguna clave pública disponible para los siguientes identificadores de clave:
7638D0442B90D010
" 

Entonces ejecutar lo sgte:

apt-get install debian-keyring debian-archive-keyring

y ejecutar apt-get update nuevamente.


2 Configuración de los sistemas:

2.1 Instalar paquetes básicos:

Se recomienda instalar los siguientes paquetes para poder configurar adecuadamente el sistema instalado y poseer herramientas de diagnóstico:

ethtool
iptables
iproute
bsdutils
dnsutils
fail2ban
firmware-linux-free
firmware-linux-nonfree

vlan
ifenslave
bridge-utils
net-tools


apt-get -y install ethtool iptables iproute bsdutils dnsutils fail2ban firmware-linux-free firmware-linux-nonfree


En XEN máquinas paravirtualizadas x86_64 e instalación por método netinstall se deben instalar también los siguientes paquetes:

linux-image-amd64
firmware-linux-nonfree
dnsutils
dbus

apt-get -y install linux-image-amd64 firmware-linux-nonfree vlan dnsutils dbus

En máquinas Linux virtualizados en VMware se debe instalar el  paquete VMware tools, primero se debe tener actualizado el sistema para proceder con la instalación:

En sistemas CLI:

apt-get -y install open-vm-tools

En sistemas GUI:

apt-get -y install open-vm-tools-desktop


2.3 Huso horario

Verificar zona horaria u huso horario:

~# cat /etc/timezone
America/Santiago

Verificar fecha:

~# date
Fri Jan 12 15:50:12 UTC 2018
~#

Notar que se entrega la hora en UTC, para cambiar a huso local ejecutar lo sgte:

dpkg-reconfigure tzdata

Se inicia un dialogo, seleccionar región, luego pais o ciudad y finalizar.

~# dpkg-reconfigure tzdata

Current default time zone: 'America/Santiago'
Local time is now:      Fri Jan 12 12:52:20 -03 2018.
Universal Time is now:  Fri Jan 12 15:52:20 UTC 2018.


Ahora el comando "date" desliega la hora local:

~# date
Fri Jan 12 12:52:39 -03 2018


2.4 Sincronizar reloj de sistema mediante NTP

Sincronizar tiempo mediante systemd-timesyncd en Stretch:

Instalación:

systemd-timesyncd viene con systemd.

Configuración:

Editar el archivo /etc/systemd/timesyncd.conf.

Para agregar servidores de tiempo se descomenta y modifica la línea "#NTP=", ejemplo:

[Time]
NTP=ntp.shoa.cl
#FallbackNTP=0.debian.pool.ntp.org 1.debian.pool.ntp.org 2.debian.pool.ntp.org 3.debian.pool.ntp.org


Guardar y activar:

systemctl enable systemd-timesyncd
Created symlink from /etc/systemd/system/sysinit.target.wants/systemd-timesyncd.service to /lib/systemd/system/systemd-timesyncd.service.


Iniciar:

systemctl start systemd-timesyncd

Reiniciar:

systemctl restart systemd-timesyncd

Revisar status:

systemctl status systemd-timesyncd

Ejemplo:

~# systemctl status systemd-timesyncd
● systemd-timesyncd.service - Network Time Synchronization
   Loaded: loaded (/lib/systemd/system/systemd-timesyncd.service; enabled; vendor preset: enabled)
  Drop-In: /lib/systemd/system/systemd-timesyncd.service.d
           └─disable-with-time-daemon.conf
   Active: active (running) since Tue 2017-12-19 16:27:17 -03; 1min 4s ago
     Docs: man:systemd-timesyncd.service(8)
 Main PID: 4458 (systemd-timesyn)
   Status: "Synchronized to time server 200.54.149.24:123 (ntp.shoa.cl)."
    Tasks: 2 (limit: 4915)
   CGroup: /system.slice/systemd-timesyncd.service
           └─4458 /lib/systemd/systemd-timesyncd

dic 19 16:27:17 fimbrethil systemd[1]: Starting Network Time Synchronization...
dic 19 16:27:17 fimbrethil systemd[1]: Started Network Time Synchronization.
dic 19 16:27:17 fimbrethil systemd-timesyncd[4458]: Synchronized to time server 200.54.149.24:123 (ntp.shoa.cl).
~#


También se puede verificar el status con el sgte comando:

timedatectl status

Ejemplo:
~# timedatectl status
      Local time: mar 2017-12-19 16:29:23 -03
  Universal time: mar 2017-12-19 19:29:23 UTC
        RTC time: mar 2017-12-19 19:29:23
       Time zone: America/Santiago (-03, -0300)
 Network time on: yes
NTP synchronized: yes
 RTC in local TZ: no
~# 



2.4 Activar rc.local

Como root se copia el archivo ejemplo:

# cp /lib/systemd/system/rc-local.service /etc/systemd/system/rc-local.service

Crear un enlace simbólico:

# cd /etc/systemd/system/multi-user.target.wants/
# ln -s /etc/systemd/system/rc-local.service rc-local.service 

Ahora crear el archivo /etc/rc.local con el siguiente contenido:

#!/bin/bash 

exit 0


 
Ahora le damos permisos 755

# chmod 755 /etc/rc.local 

Habilitar, ejecutar y verificar el status:

# systemctl enable rc-local.service

~# systemctl enable rc-local.service
The unit files have no installation config (WantedBy, RequiredBy, Also, Alias
settings in the [Install] section, and DefaultInstance for template units).
This means they are not meant to be enabled using systemctl.
Possible reasons for having this kind of units are:
1) A unit may be statically enabled by being symlinked from another unit's
   .wants/ or .requires/ directory.
2) A unit's purpose may be to act as a helper for some other unit which has
   a requirement dependency on it.
3) A unit may be started when needed via activation (socket, path, timer,
   D-Bus, udev, scripted systemctl call, ...).
4) In case of template units, the unit is meant to be enabled with some
   instance name specified.
~#
 
# systemctl start rc-local.service 
# systemctl status rc-local.service 

~# systemctl status rc-local.service
● rc-local.service - /etc/rc.local Compatibility
   Loaded: loaded (/etc/systemd/system/rc-local.service; enabled; vendor preset: enabled)
  Drop-In: /lib/systemd/system/rc-local.service.d
           └─debian.conf
   Active: active (exited) since Thu 2018-01-11 12:55:24 -03; 13s ago
  Process: 1107 ExecStart=/etc/rc.local start (code=exited, status=0/SUCCESS)

ene 11 12:55:24 reverse systemd[1]: Starting /etc/rc.local Compatibility...
ene 11 12:55:24 reverse systemd[1]: Started /etc/rc.local Compatibility.
~# 


6.2 Optimizaciones:

6.2.1 Discos y Filesystems

Para el caso de los servidores con mucha carga de proceso y acceso a disco, en especial cuando son servidores virtualizados, se aconseja montar las particiones con las opciones noatime y nodiratime para aumentar el rendimiento en escritura, estas opciones evitan que el sistema actualice (escriba en disco) la hora del acceso en la meta información de los archivos, reduciendo la escritura y mejorando el performance.
Editar el archivo /etc/fstab y modificar las opciones de montaje de las particiones con filesystems ext2, ext3 y ext4, no funciona en particiones swap, ejemplo:

/dev/xvda2  /  ext3  errors=remount-ro  0 1

Debe quedar así:

/dev/xvda2  /  ext3 noatime,nodiratime,errors=remount-ro 0 1

Luego es posible aplicar el cambio sin reiniciar el host:

mount -o remount,noatime,nodiratime,errors=remount-ro /

Nota: En el caso de hosts paravirtualizados este ajuste se hace automáticamente en la instalación.

Verificar con cat /proc/mounts, ejemplo:

~# cat /proc/mounts | grep ext4
/dev/xvda1 / ext4 rw,relatime,errors=remount-ro,data=ordered 0 0

~# mount -o remount,noatime,nodiratime,errors=remount-ro /

~# cat /proc/mounts | grep ext4
/dev/xvda1 / ext4 rw,noatime,nodiratime,errors=remount-ro,data=ordered 0 0
 



6.2.2 RNG

Verificar el valor actual de Entropía.

cat /proc/sys/kernel/random/entropy_avail

El resultado debe estar en el rango 3000 - 3900 para máquinas físicas.
Resultado en máquina virtual:

cat /proc/sys/kernel/random/entropy_avail
761



Verifcar que la CPU soporta la instruccion rdran:
	
cat /proc/cpuinfo | grep -i rdrand | echo $?
 
El resultado debe ser 0 si la CPU soporta la instruccion rdran, entonces activar soporte rdran en kernel.

Editar /etc/sysctl.conf y agregar al final:

# Agrega soporte intel rdrand para suministrar entropía por hardware.
kernel.random.read_wakeup_threshold = 2048
kernel.random.write_wakeup_threshold = 3072


Activar cambios:

sysctl -p


Verificar (Máquina virtual):
~# cat /proc/sys/kernel/random/entropy_avail
886


apt-get -y install rng-tools

...
Configurando rng-tools (2-unofficial-mt.14-1+b2) ...
Job for rng-tools.service failed because the control process exited with error code.
See "systemctl status rng-tools.service" and "journalctl -xe" for details.
invoke-rc.d: initscript rng-tools, action "start" failed.
● rng-tools.service
   Loaded: loaded (/etc/init.d/rng-tools; generated; vendor preset: enabled)
   Active: failed (Result: exit-code) since Tue 2017-12-19 16:41:47 -03; 20ms ago
     Docs: man:systemd-sysv-generator(8)
  Process: 4587 ExecStart=/etc/init.d/rng-tools start (code=exited, status=1/FAILURE)

dic 19 16:41:47 fimbrethil systemd[1]: Starting rng-tools.service...
dic 19 16:41:47 fimbrethil rng-tools[4587]: Starting Hardware RNG entropy gatherer daemon: (failed).
dic 19 16:41:47 fimbrethil systemd[1]: rng-tools.service: Control process exited, code=exited status=1
dic 19 16:41:47 fimbrethil systemd[1]: Failed to start rng-tools.service.
dic 19 16:41:47 fimbrethil systemd[1]: rng-tools.service: Unit entered failed state.
dic 19 16:41:47 fimbrethil systemd[1]: rng-tools.service: Failed with result 'exit-code'.
Procesando disparadores para systemd (232-25+deb9u1) ...
~# 

Editar /etc/default/rng-tools y agregar:

HRNGDEVICE=/dev/urandom

Activar:

~# systemctl enable rng-tools.service
rng-tools.service is not a native service, redirecting to systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable rng-tools


Iniciar:

~# systemctl start rng-tools.service


Verificar status:

~# systemctl status rng-tools.service
● rng-tools.service
   Loaded: loaded (/etc/init.d/rng-tools; generated; vendor preset: enabled)
   Active: active (running) since Thu 2018-01-11 13:09:15 -03; 5s ago
     Docs: man:systemd-sysv-generator(8)
  Process: 1377 ExecStart=/etc/init.d/rng-tools start (code=exited, status=0/SUCCESS)
    Tasks: 4 (limit: 4915)
   CGroup: /system.slice/rng-tools.service
           └─1379 /usr/sbin/rngd -r /dev/urandom

ene 11 13:09:15 reverse systemd[1]: Starting rng-tools.service...
ene 11 13:09:15 reverse rng-tools[1377]: Starting Hardware RNG entropy gatherer daemon: rngd.
ene 11 13:09:15 reverse rngd[1379]: rngd 2-unofficial-mt.14 starting up...
ene 11 13:09:15 reverse systemd[1]: Started rng-tools.service.
ene 11 13:09:15 reverse rngd[1379]: entropy feed to the kernel ready
~# 


Y verificar por última vez:

~# cat /proc/sys/kernel/random/entropy_avail
3104



6.2.3 Actualización del firmware microcode de la CPU: - Revisar -

~# apt-get -y install intel-microcode
Leyendo lista de paquetes... Hecho
Creando árbol de dependencias       
Leyendo la información de estado... Hecho
intel-microcode ya está en su versión más reciente (3.20170707.1~deb9u1).
fijado intel-microcode como instalado manualmente.
0 actualizados, 0 nuevos se instalarán, 0 para eliminar y 0 no actualizados.
~#

Lo siguiente solo en máquinas físicas.

Para Procesadores Intel IA32/IA64 ejecutar:

	apt-get -y install intel-microcode


Para Procesadores AMD ejecutar:

	apt-get -y install amd64-microcode

Reiniciar la máquina para que se aplique la actualización.


6.2.4 Bonding

Instalar:

apt-get -y install ifenslave


Editar /etc/modules y agregar bonding

# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
# Parameters can be specified after the module name.

loop
bonding


Crear /etc/modprobe.d/bonding.conf con el sgte contenido:

# Algoritmo RR - Round-Robin
options bonding mode=0 miimon=100 downdelay=200 updelay=200 max_bonds=1

o

# 802.3ad en switch que lo soporten
options bonding mode=4 miimon=100 downdelay=200 updelay=200 max_bonds=1


Crear archivo con configuración en un paso:

echo "options bonding mode=4 miimon=100 downdelay=200 updelay=200 max_bonds=1" > /etc/modprobe.d/bonding.conf


Modificar /etc/network/interfaces

comentar la configuración del la interfaz primaria en #allow-hotplug eth0 y reemplazar por (ejemplo para un bonding de dos Nic's):

auto bond0
iface bond0 inet static
        ###hwaddress ether 00:19:DB:C2:3D:3C
        address 192.168.10.162/24
        gateway 192.168.10.1
        # dns-* options are implemented by the resolvconf package, if installed
        dns-nameservers 192.168.7.8
        dns-search xen.local
        up /sbin/ifenslave bond0 enp3s0 enp5s0
        down /sbin/ifenslave -d bond0 enp3s0 enp5s0





Presto!!
Reboot an enjoy

Verificar con ip l e ip l y con cat /proc/net/bonding/bond0:

~# cat /proc/net/bonding/bond0 
Ethernet Channel Bonding Driver: v3.7.1 (April 27, 2011)

Bonding Mode: IEEE 802.3ad Dynamic link aggregation
Transmit Hash Policy: layer2 (0)
MII Status: up
MII Polling Interval (ms): 100
Up Delay (ms): 200
Down Delay (ms): 200

802.3ad info
LACP rate: slow
Min links: 0
Aggregator selection policy (ad_select): stable
System priority: 65535
System MAC address: 00:1c:c4:ed:3d:0c
Active Aggregator Info:
	Aggregator ID: 1
	Number of ports: 2
	Actor Key: 9
	Partner Key: 5
	Partner Mac Address: d0:7e:28:4c:bf:4a

Slave Interface: enp3s0
MII Status: up
Speed: 1000 Mbps
Duplex: full
Link Failure Count: 0
Permanent HW addr: 00:1c:c4:ed:3d:0c
Slave queue ID: 0
Aggregator ID: 1
Actor Churn State: none
Partner Churn State: none
Actor Churned Count: 0
Partner Churned Count: 0
details actor lacp pdu:
    system priority: 65535
    system mac address: 00:1c:c4:ed:3d:0c
    port key: 9
    port priority: 255
    port number: 1
    port state: 61
details partner lacp pdu:
    system priority: 32768
    system mac address: d0:7e:28:4c:bf:4a
    oper key: 5
    port priority: 32768
    port number: 17
    port state: 61

Slave Interface: enp5s0
MII Status: up
Speed: 1000 Mbps
Duplex: full
Link Failure Count: 0
Permanent HW addr: 00:1c:c4:ed:3d:0a
Slave queue ID: 0
Aggregator ID: 1
Actor Churn State: none
Partner Churn State: none
Actor Churned Count: 0
Partner Churned Count: 0
details actor lacp pdu:
    system priority: 65535
    system mac address: 00:1c:c4:ed:3d:0c
    port key: 9
    port priority: 255
    port number: 2
    port state: 61
details partner lacp pdu:
    system priority: 32768
    system mac address: d0:7e:28:4c:bf:4a
    oper key: 5
    port priority: 32768
    port number: 18
    port state: 61
~#


6.2.5 Deshabilitar IPv6

Lo siguiente no es valido en sistemas Paravirtualizados y que no inician por gestor de arranque.

Agregar IPV6_DISABLE=1 a la variable GRUB_CMDLINE_LINUX en /etc/default/grub y luego ejecutar:

# update-grub 

y reboot. 


Luego para todos los sistema lo siguiente es valido:

Editar /etc/sysctl.conf y agregar estos parámetros al kernel, se deberá asegurar de agregar otras interfaces de red existentes en las que busque deshabilitar IPv6.

net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
net.ipv6.conf.eth0.disable_ipv6 = 1

Luego de editar sysctl.conf, se debe ejecutar "sysctl -p" para aplicar los cambios inmediatamente o reiniciar el sistema. 

# sysctl -p

~# sysctl -p
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
net.ipv6.conf.eth0.disable_ipv6 = 1
net.ipv6.conf.eth1.disable_ipv6 = 1
net.ipv6.conf.vlan103.disable_ipv6 = 1


6.3 Securizar servicios:

6.3.1 Servicio SSH

-----------------------
No permitir acceso a la cuenta “root”, solo acceso a cuentas no privilegiadas. Editar el archivo "/etc/ssh/sshd_config" y cambiar la opción “PermitRoolLogin yes” a “no”:

PermitRootLogin no
-------------------------

Ocultar Debian Banner (Versión de SO GNU/Debian):

Editar "/etc/ssh/sshd_config" y agregar en la linea 111 "DebianBanner no" después de la línea "#Banner none"

nano /etc/ssh/sshd_config

#Banner none
DebianBanner no

Reiniciar servicio:

systemctl restart ssh.service


6.3.2 Tcp Wrappers

Se debe primero editar /etc/hosts.allow y como mínimo asegurar las conexiones por ssh desde hosts de servicio técnico y luego los accesos para cada servicio según lo requerido:

nano /etc/hosts.allow

sshd : 127. 192.168.0.1 192.168.0.14 192.168.0.22
nrpe : 127. 192.168.0.14
snmpd : 127. 192.168.0.1 192.168.0.14

Lo anterior permite: 

Conexiones por SSH desde hosts 192.168.0.1 y 192.168.0.22
NRPE Conexiones sólo desde localhost 127. y servidor Nagios ip 192.192.168.0.14 
Monitoreo SNMP desde ip 192.168.0.1

Finalmente, editar /etc/hosts.deny y agregar:

ALL : ALL

Nota: No se requiere reiniciar los servicios, los cambios se aplican inmediatamente.


6.3.3 Portmap

Desabilitar portmap en STRETCH:

systemctl stop rpcbind.service

systemctl disable rpcbind.service
Synchronizing state for rpcbind.service with sysvinit using update-rc.d...
Executing /usr/sbin/update-rc.d rpcbind defaults
Executing /usr/sbin/update-rc.d rpcbind disable
insserv: warning: current start runlevel(s) (empty) of script `rpcbind' overrides LSB defaults (S).
insserv: warning: current stop runlevel(s) (0 1 6 S) of script `rpcbind' overrides LSB defaults (0 1 6).


6.3.4 Fail2ban

Par los hosts expuestos a Internet editar /etc/fail2ban/jail.conf y en la sgte. sección definir según lo que corresponda:
Un valor de bantime = 36000000 significa 416.66 días bloqueado, un bantime = 900 es 15 minutos y se usa cuando es acceso para una cuenta hosting administrado externo (por ejemplo). Ignoreip son las direcciones IP que se excluyen del control.

El archivo debe quedar según lo mostrado (según el perfil del servicio) y determinar los valores por omisión:

[DEFAULT]

# "ignoreip" can be an IP address, a CIDR mask or a DNS host
ignoreip = 127.0.0.1 192.XXX.XXX.1/32 192.XXX.YYY.0/24
bantime  = 36000000
maxretry = 3

Para el servicio SSH se busca la sección SSH y se modifica ­ bajo se Sección "JAILS":
Se habilita el servicio con "enable = true" y se sugiere un Findtime de 1 hora (findtime = 3600) que es el tiempo de la ventana en que busca los errores de conexión.

[sshd]

port    = ssh
logpath = %(sshd_log)s
backend = %(sshd_backend)s

Debe quedar así:

[sshd]

enabled = true
findtime = 3600
maxretry = 3
port    = ssh
logpath = %(sshd_log)s
backend = %(sshd_backend)s


Reinicia con:

 systemctl restart fail2ban



6.4 Monitoreo e inventario de sistemas:


6.4.1 SNMP

Preeliminar: Agregar en /etc/hosts.allow

snmpd : 127. 192.168.7.1 192.168.7.177

Instalar:

apt-get -y install snmpd

Editar /etc/snmp/snmpd.conf

Comentar la sgte línea;

agentAddress  udp:127.0.0.1:161

debe quedar así:

#agentAddress  udp:127.0.0.1:161

Descomentar la sgte línea:

#agentAddress udp:161,udp6:[::1]:161


Debe quedar así:

agentAddress udp:161,udp6:[::1]:161


Para el caso de sistemas con IPv6 deshabilitado deberá quedar así:

agentAddress udp:161


Incluir:

rocommunity crns 192.168.0.1/32
rocommunity crns 192.168.0.135/32


Reiniciar:

/etc/init.d/snmpd restart
[ ok ] Restarting snmpd (via systemctl): snmpd.service.

Abrir puertos:

Probar desde otro hosts:

snmpwalk -v1 -c <comunidad> <direccion_IP> 

ejemplo:

snmpwalk -v1 -c c4sch1l3 192.168.7.173

y se deberá desplegar gran cantidad de información....


6.4.2 NAGIOS

Preliminar: Se debe agregar a /etc/hosts.allow la sgte línea:

nrpe : 127. 192.168.7.104

Instalar NRPE (Cliente Nagios):

apt-get -y install nagios-nrpe-server nagios-plugins-contrib                

Editar /etc/nagios/nrpe_local.cfg y agregar/ajustar según corresponda:

allowed_hosts=127.0.0.1,192.168.7.104

command[check_users]=/usr/lib/nagios/plugins/check_users -w 5 -c 10
command[check_load]=/usr/lib/nagios/plugins/check_load -w 15,10,5 -c 30,25,20
command[check_zombie_procs]=/usr/lib/nagios/plugins/check_procs -w 5 -c 10 -s Z
command[check_uptime]=/usr/lib/nagios/plugins/check_uptime
command[check_total_procs]=/usr/lib/nagios/plugins/check_procs -w 150 -c 200
command[check_disk]=/usr/lib/nagios/plugins/check_disk -w 5% -c 1%

Guardar y salir, luego reiniciar nagios con:

systemctl restart nagios-nrpe-server


6.4.3 Registrar en SIEM Prelude

Instalar y configurar sensor Prelude-lml

apt-get -y install prelude-lml


Cambiar la dirección IP de servidor, buscar en al archivo /etc/prelude/default/client.conf

server-addr = 127.0.0.1

Cambiar por:

server-addr = 192.168.7.240


Registrar Prelude-LML en Prelude-Manager

Para este paso se requiere iniciar la sesion en el hosts a registrar (Host A) y en el SIEM (Host B):

En terminal A (Agent):

root@elendil:~# prelude-admin register prelude-lml "idmef:w admin:r" 192.168.7.240 --uid 0  --gid 0
Generating 2048 bits RSA private key... This might take a very long time.
[Increasing system activity will speed-up the process].
Generation in progress... 


You now need to start "prelude-admin" registration-server on 192.168.7.240:
example: "prelude-admin registration-server prelude-manager"

Enter the one-shot password provided on 192.168.7.240: 

En Terminal B(Server):

[root@elrond ~]# prelude-admin registration-server prelude-manager
The "d09qi3k0" password will be requested by "prelude-admin register"
in order to connect. Please remove the quotes before using it.

Generating 1024 bits Diffie-Hellman key for anonymous authentication...
Waiting for peers install request on 0.0.0.0:5553...
Waiting for peers install request on :::5553...

En terminal A (Agent) Con la password "d09qi3k0"

Enter the one-shot password provided on 192.168.7.240: 
Confirm the one-shot password provided on 192.168.7.240: 

Connecting to registration server (192.168.7.240:5553)... Authentication succeeded.

En terminal B se completa el registro:

Connection from 192.168.7.164:39931...
Registration request for analyzerID="509268644808355" permission="idmef:w admin:r".
Approve registration? [y/n]: y
192.168.7.164:39931 successfully registered.


En terminal A se reinicia y comprueba arranque del servicio:
 
root@elendil:~# systemctl restart prelude-lml

root@elendil:~# systemctl status prelude-lml
* prelude-lml.service - LSB: Start prelude-lml sensor
   Loaded: loaded (/etc/init.d/prelude-lml)
   Active: active (running) since Mon 2017-02-20 16:46:40 CLST; 8s ago
  Process: 6143 ExecStop=/etc/init.d/prelude-lml stop (code=exited, status=0/SUCCESS)
  Process: 6146 ExecStart=/etc/init.d/prelude-lml start (code=exited, status=0/SUCCESS)
   CGroup: /system.slice/prelude-lml.service
           `-6149 /usr/bin/prelude-lml -d -q -P /var/run/prelude-lml.pid

...
...
Feb 20 16:46:40 elendil prelude-lml[6146]: Starting Prelude LML: prelude-lml.
Feb 20 16:46:40 elendil prelude-lml[6146]: .
Feb 20 16:46:40 elendil systemd[1]: Started LSB: Start prelude-lml sensor.

Fin del proceso de registro.


6.4.4 OCS Inventory

Instalar mediante APT el agente ocsinventory:

apt-get install ocsinventory-agent

Luego Seleccione el método http si posee un servidor de inventario OCS ingresar la ruta del servidor: 

https://host.dominio.topdomain/ocsinventory

Se crea la configuración en el archivo /etc/ocsinventory/ocsinventory-agent.cfg, modificar/agregar lo siguiente:

server=https://host.dominio.topdomain/ocsinventory
logger=Stderr
logfile=/var/log/ocsinventory-client/ocsinventory-agent.log

Probar:

/usr/bin/ocsinventory-agent -s https://host.dominio.topdomain/ocsinventory --debug

Y luego:

cat /var/log/ocsinventory-client/ocsinventory-agent.log  | grep debug

Listo el equipo ya está Inventariado.


5. Referencias: 

https://servidordebian.org/

