Habilitar forward:

#Habilitar forwarding
net.ipv4.ip_forward = 1
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv6.conf.all.forwarding = 1
net.ipv6.conf.eth0.accept_ra = 2
net.ipv6.conf.eth1.accept_ra = 2
net.ipv6.conf.vlan102.accept_ra = 2


sysctl -p

##############

Habilitar rc.local y agregar:

#!/bin/bash

#
# Nat para red REMOTA IPSec
#
/sbin/iptables -t nat -A POSTROUTING -d 10.111.72.0/21 -j MASQUERADE

exit 0

#####################################

Strongswan

apt-get update ; apt-get -y upgrade

apt-get -y install strongswan


Configure strongSwan:

cat > /etc/ipsec.conf <<EOF
# ipsec.conf - strongSwan IPsec configuration file

# basic configuration

config setup
  # strictcrlpolicy=yes
  # uniqueids = no

# Add connections here.

# Sample VPN connections

conn %default
  ikelifetime=60m
  keylife=20m
  rekeymargin=3m
  keyingtries=1
  keyexchange=ikev1
  authby=secret
  ike=aes128-sha1-modp1024,3des-sha1-modp1024!
  esp=aes128-sha1-modp1024,3des-sha1-modp1024!

conn myvpn
  keyexchange=ikev1
  left=%defaultroute
  auto=add
  authby=secret
  type=transport
  leftprotoport=17/1701
  rightprotoport=17/1701
  right=$VPN_SERVER_IP
EOF

cat > /etc/ipsec.secrets <<EOF
: PSK "$VPN_IPSEC_PSK"
EOF

chmod 600 /etc/ipsec.secrets




Restart services:

service strongswan restart



---------
Run ifconfig and check the output. You should now see a new interface ppp0.

Check your existing default route:

ip route

Find this line in the output: default via X.X.X.X .... Write down this gateway IP for use in the two commands below.

Exclude your VPN server's IP from the new default route (replace with actual value):

route add YOUR_VPN_SERVER_IP gw X.X.X.X

If your VPN client is a remote server, you must also exclude your Local PC's public IP from the new default route, to prevent your SSH session from being disconnected (replace with actual value):

route add YOUR_LOCAL_PC_PUBLIC_IP gw X.X.X.X

Add a new default route to start routing traffic via the VPN serverï¼š

route add default dev ppp0

The VPN connection is now complete. Verify that your traffic is being routed properly:

wget -qO- http://ipv4.icanhazip.com; echo

The above command should return Your VPN Server IP.

To stop routing traffic via the VPN server:

route del default dev ppp0

To disconnect:

# Ubuntu & Debian
echo "d myvpn" > /var/run/xl2tpd/l2tp-control
ipsec down myvpn



------------------

Check status of the IPsec VPN server:

ipsec status


Show current established VPN connections:

ipsec whack --trafficstatus




ref: https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients.md#linux






##########################################

1.- /etc/ipsec.conf en debian 6:



# /etc/ipsec.conf - Openswan IPsec configuration file

# This file:  /usr/share/doc/openswan/ipsec.conf-sample
#
# Manual:     ipsec.conf.5


version 2.0     # conforms to second version of ipsec.conf specification

# basic configuration
config setup
        # Do not set debug options to debug configuration issues!
        # plutodebug / klipsdebug = "all", "none" or a combation from below:
        # "raw crypt parsing emitting control klips pfkey natt x509 dpd private"
        # eg:
        # plutodebug="control parsing"
        #
        # enable to get logs per-peer
        # plutoopts="--perpeerlog"
        #
        # Again: only enable plutodebug or klipsdebug when asked by a developer
        #
        # NAT-TRAVERSAL support, see README.NAT-Traversal
        nat_traversal=yes
        #exclude networks used on server side by adding %v4:!a.b.c.0/24
        virtual_private=%v4:10.0.0.0/8,%v4:!192.168.0.0/16,%v4:172.16.0.0/12
        # OE is now off by default. Uncomment and change to on, to enable.
        oe=off
        # which IPsec stack to use. auto will try netkey, then klips then mast
        ###protostack=auto
        protostack=netkey

# Add connections here

# sample VPN connection
# for more examples, see /etc/ipsec.d/examples/
#conn sample
#               # Left security gateway, subnet behind it, nexthop toward right.
#               left=10.0.0.1
#               leftsubnet=172.16.0.0/24
#               leftnexthop=10.22.33.44
#               # Right security gateway, subnet behind it, nexthop toward left.
#               right=10.12.12.1
#               rightsubnet=192.168.0.0/24
#               rightnexthop=10.101.102.103
#               # To authorize this connection, but not actually start it,
#               # at startup, uncomment this.
#               #auto=add

include /etc/ipsec.d/*.conf




2.- /etc/ipsec.d/mtt.conf


#
# Conexion al MTT CRNS (crns)
#

conn mtt
        #
        # Opciones
        #
        pfs=no
        type=tunnel
        aggrmode=no
        compress=no
        ###remote_peer_type=cisco
        auto=add
        ###dpddelay=30
        ###dpdtimeout=120
        ###dpdaction=clear
        #
        # Fase 1.
        # 
        ikelifetime=8h
        authby=secret
        keyexchange=ike
        ###ike=3des-sha1-1024
        ike=3des-sha1;modp1024
        #
        # Fase 2.
        #
        keylife=1h
        ###esp=3des-sha1-1024
        phase2alg=3des-sha1;modp1024
        #
        # Remoto.
        #
        leftid=@mtt.gob.cl
        left=163.247.52.14
        leftsubnets={172.25.1.60/32,172.25.1.120/32}
        leftnexthop=%defaultroute
        #
        # Local.
        #
        rightid=@thorin.caschile.cl
        right=190.153.214.148
        rightsubnet=192.168.7.192/32

3.- /etc/ipsec.secrets

# RCSID $Id: ipsec.secrets.proto,v 1.3.6.1 2005/09/28 13:59:14 paul Exp $
# This file holds shared secrets or RSA private keys for inter-Pluto
# authentication.  See ipsec_pluto(8) manpage, and HTML documentation.

# RSA private key for this host, authenticating it to any other host
# which knows the public part.  Suitable public keys, for ipsec.conf, DNS,
# or configuration of other implementations, can be extracted conveniently
# with "ipsec showhostkey".

# this file is managed with debconf and will contain the automatically created RSA keys
include /var/lib/openswan/ipsec.secrets.inc

##: PSK "MTT.+77"
%any %any : PSK "MTT.+77"
##%any %any : PSK "pruebavpn"
###: PSK  "v+NkxY9LLZvwj4qCC2o/gGrWDF2d21jL"
###163.247.52.14 :	PSK  "v+NkxY9LLZvwj4qCC2o/gGrWDF2d21jL"
###190.153.214.148 : PSK "MTT.+77"

root@thorin:/etc# 


######################################

Conecion IpSEC INTESIS SUBDERE:

/etc/ipsec.conf



######################################
Ref:

http://socpuppet.blogspot.cl/2014/05/openswan-to-fortigate-route-based-vpn.html

http://tomatousb.org/forum/t-677831/tutorial-ipsec-site-to-site-vpn-with-strongswan




################

Intesis final:

/etc/ipsec.d/subdere.conf

#
# Conexion a SUBDERE INTESIS 
# Por crns
#

conn subdere
        #
        # Opciones
        #
        type=tunnel
        ###aggrmode=no
        compress=no
        ###remote_peer_type=cisco
        auto=add
        ###dpddelay=30
        ###dpdtimeout=120
        ###dpdaction=clear
        #
        # Fase 1.
        # 
        ikelifetime=8h
        authby=secret
	keyexchange=ike
	ike=3des-sha1-modp1024!
        #
        # Fase 2.
        #
	keylife=60m
	esp=3des-sha1-modp1024!
        #
        # Remoto.
        #
        ###rightid=@subdere.cl
        right=190.98.247.22
        rightsubnet=10.111.72.0/27
        #
        # Local.
        #
        ###leftid=@theoden.caschile.cl
        left=190.153.214.146
        leftsubnet=192.168.7.0/24


/etc/ipsec.secrets

# This file holds shared secrets or RSA private keys for authentication.

# RSA private key for this host, authenticating it to any other host
# which knows the public part.

# this file is managed with debconf and will contain the automatically created private key
###include /var/lib/strongswan/ipsec.secrets.inc
%any %any : PSK "SUB.,,25TREm"


/etc/rc.local 

#!/bin/bash

#
# POLITICA IPSec para red INTESIS SUBDERE
#

/sbin/iptables -t nat -I POSTROUTING -s 192.168.7.0/24 -d 10.111.72.0/27  -m policy --pol ipsec --dir out -j ACCEPT

exit 0





