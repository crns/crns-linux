sudo yum -y install bash-completion-extras gedit



*Repositorio NUX

Repositorio adicionales (entra en conflicto con Repoforge/RPMforge, ATrpms y posiblemente otros repos).

My GPG key: http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro 

http://li.nux.ro/repos.html

comprovar en repo ultima version de nux-dextop-release

http://li.nux.ro/download/nux/dextop/el7/x86_64/


http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm


Requiere como dependencia el repositorio EPEL (ok).

sudo yum install -y http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm

Comprobar:

[mcampos@localhost ~]$ sudo yum repolist


----

yum update -y


Ref:
https://wiki.centos.org/AdditionalResources/Repositories


############## guía emezeta




####????sudo yum -y install git vim gedit



[mcampos@localhost ~]$ openbox --version
Openbox 3.5.2
Copyright (c) 2004   Mikael Magnusson
Copyright (c) 2002   Dana Jansens

This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it
under certain conditions. See the file COPYING for details.

[mcampos@localhost ~]$ 

***
*Repositorios StotinkaOS

https://www.stotinkaos.net/about

DESCRIPCIÓN
StotinkaOS es una distribución de escritorio de GNU / Linux basada en CentOS. El proyecto fue lanzado oficialmente el 07.02.2015. y hasta la fecha, hay seis versiones publicadas después de la distribución en la que se basa. Ofrecemos un sistema informático robusto y fácil de usar que incluye un paquete completo de software para sus necesidades. La distribución tiene sus propios repositorios de paquetes que contienen una amplia gama de aplicaciones útiles de escritorio y sistema. Además, se incluyen fuentes de software de terceros. StotinkaOS está listo para el uso diario y tiene soporte a largo plazo completamente en búlgaro. 
Dirigido por el lema "StotinkaOS para todos", nuestro equipo se esfuerza por crear una distribución estable, accesible y fácil de usar para los usuarios novatos, a la vez que es completamente funcional para los expertos.

Repositorio de StotinkaOS

sudo yum install wget -y

su -

cd /etc/yum.repos.d

wget https://www.stotinkaos.net/stotinkaOS/repo/7/stotinkaOS.repo

nano etc/yum.repos.s/stotinkaOS.repo

enablerepo="StotinkaOS-Base"


Instalar KEY

sudo rpm --import https://www.stotinkaos.net/stotinkaOS/repo/7/RPM-GPG-KEY-StotinkaOS-7

o

sudo wget https://www.stotinkaos.net/stotinkaOS/repo/7/RPM-GPG-KEY-StotinkaOS-7
sudo rpm --import RPM-GPG-KEY-StotinkaOS-7


Canales:

[StotinkaOS-Base]
[StotinkaOS-Source]
[StotinkaOS-Testing]
[StotinkaOS-Plus]
[StotinkaOS-Debug]
[StotinkaOS-Wine]
[StotinkaOS-Wine-Source]

***
Instalar obconf y obmenu

sudo yum search obmenu obconf

sudo yum install --enablerepo="StotinkaOS-Base" obmenu obconf

++++


4.- Instalación y configuración temas de Openbox:

###yum install -y *openbox-theme*

sudo yum install clearlooks-phenix-openbox-theme numix-gtk-theme

La configuración queda en:

/home/usuario/.config/openbox/rc.xml.


5.- Tipografías 

****Investigar


7. Configuración de temas GTK++

###sudo yum install lxappearance gtk2-engines gnome-themes-standard *icon-theme*

sudo yum install -y --enablerepo="StotinkaOS-Base" lxappearance

*** falta lxappearance-obconf

sudo yum install --enablerepo="StotinkaOS-Base" gtk2-engines gnome-themes-standard *icon-theme* *gtk-theme*




6. Configuración de menús de Openbox:

sudo yum install -y nautilus-* gnome-terminal-nautilus


sudo yum install gvfs-*

nautilus -p





8. Seleccionar un tema de iconos


9. Fondo de pantalla (wallpaper)

Instalar Feh:

Install Howto
Download the latest gf-release rpm from
http://mirror.ghettoforge.org/distributions/gf/el/7/gf/x86_64/
Install gf-release rpm:
# rpm -Uvh gf-release*rpm

sudo yum install http://mirror.ghettoforge.org/distributions/gf/el/7/gf/x86_64/gf-release-7-10.gf.el7.noarch.rpm

Install feh rpm package:
# yum --enablerepo=gf install feh
##

# Set desktop wallpaper:
#feh --bg-scale ~/path/to/wallpaper.png &
#feh --bg-scale /usr/share/backgrounds/morning.jpg &

su -

echo 'feh --bg-scale /usr/share/backgrounds/night.jpg &' >> /etc/xdg/openbox/autostart




Instalar Nitrogen:

#
#URL:https://rpmfind.net/linux/rpm2html/search.php?query=nitrogen
#yum install https://rpmfind.net/linux/Mandriva/devel/cooker/x86_64/media/contrib/release/nitrogen-1.5.2-2-mdv2012.0.x86_64.rpm
#


yum install https://copr-be.cloud.fedoraproject.org/results/maxamillion/epel7-i3wm/epel-7-x86_64/nitrogen-1.5.2-13.fc20/nitrogen-1.5.2-13.el7.centos.x86_64.rpm



12. Composición de escritorio

sudo yum install --enablerepo="StotinkaOS-Base" compton


http://duncanlock.net/blog/2013/06/07/how-to-switch-to-compton-for-beautiful-tear-free-compositing-in-xfce/

Configure Compton

Once it’s installed, create a text file in ~/.config/ called compton.conf with the following contents:

nano ~/.config/compton.conf

#################################
#
# Backend
#
#################################

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";

#################################
#
# GLX backend
#
#################################

glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing
# them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the
# whole screen is modified,
# but a 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown.
# Useful with --glx-swap-method, as well.
glx-copy-from-front = false;

# GLX backend: Use MESA_copy_sub_buffer to do partial screen update.
# My tests on nouveau shows a 200% performance boost when only 1/4 of the
# screen is updated.
# May break VSync and is not available on some drivers.
# Overrides --glx-copy-from-front.
# glx-use-copysubbuffermesa = true;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes,
# but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.
# glx-no-rebind-pixmap = true;


# GLX backend: GLX buffer swap method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# undefined is the slowest and the safest, and the default value.
# copy is fastest, but may fail on some drivers,
# 2-6 are gradually slower but safer (6 is still faster than 0).
# Usually, double buffer means 2, triple buffer means 3.
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
glx-swap-method = "undefined";

#################################
#
# Shadows
#
#################################

# Enabled client-side shadows on windows.
shadow = true;
# Don't draw shadows on DND windows.
no-dnd-shadow = true;
# Avoid drawing shadows on dock/panel windows.
no-dock-shadow = true;
# Zero the part of the shadow's mask behind the window.
# Fix some weirdness with ARGB windows.
clear-shadow = true;
# The blur radius for shadows. (default 12)
shadow-radius = 5;
# The left offset for shadows. (default -15)
shadow-offset-x = -5;
# The top offset for shadows. (default -15)
shadow-offset-y = -5;
# The translucency for shadows. (default .75)
shadow-opacity = 0.5;

# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;

# The shadow exclude options are helpful if you have shadows enabled.
# Due to the way compton draws its shadows, certain applications will
# have visual glitches
# (most applications are fine, only apps that do weird things
# with xshapes or argb are affected).
# This list includes all the affected apps I found in my testing.
# The "! name~=''" part excludes shadows on any "Unknown" windows,
# this prevents a visual glitch with the XFWM alt tab switcher.
shadow-exclude = [
    "! name~=''",
    "name = 'Notification'",
    "name = 'Plank'",
    "name = 'Docky'",
    "name = 'Kupfer'",
    "name = 'xfce4-notifyd'",
    "name *= 'VLC'",
    "name *= 'compton'",
    "name *= 'Chromium'",
    "name *= 'Chrome'",
    "name *= 'Firefox'",
    "class_g = 'Conky'",
    "class_g = 'Kupfer'",
    "class_g = 'Synapse'",
    "class_g ?= 'Notify-osd'",
    "class_g ?= 'Cairo-dock'",
    "class_g ?= 'Xfce4-notifyd'",
    "class_g ?= 'Xfce4-power-manager'"
];
# Avoid drawing shadow on all shaped windows
# (see also: --detect-rounded-corners)
shadow-ignore-shaped = false;

#################################
#
# Opacity
#
#################################

menu-opacity = 1;
inactive-opacity = 1;
active-opacity = 1;
frame-opacity = 1;
inactive-opacity-override = false;
alpha-step = 0.06;

# Dim inactive windows. (0.0 - 1.0)
# inactive-dim = 0.2;
# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;
# Blur background of transparent windows. Bad performance with
# X Render backend. GLX backend is preferred.
# blur-background = true;
# Blur background of opaque windows with transparent frames as well.
# blur-background-frame = true;
# Do not let blur radius adjust based on window opacity.
blur-background-fixed = false;
blur-background-exclude = [
    "window_type = 'dock'",
    "window_type = 'desktop'"
];

#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = true;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 4;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [ ];

#################################
#
# Other
#
#################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is
# focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular
# when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers
# not passing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce4-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Specify refresh rate of the screen.
# If not specified or 0, compton will try detecting this with X RandR extension.
refresh-rate = 0;

# Set VSync method. VSync methods currently available:
# none: No VSync
# drm: VSync with DRM_IOCTL_WAIT_VBLANK. May only work on some drivers.
# opengl: Try to VSync with SGI_video_sync OpenGL extension.
# Only work on some drivers.
# opengl-oml: Try to VSync with OML_sync_control OpenGL extension.
# Only work on some drivers.
# opengl-swc: Try to VSync with SGI_swap_control OpenGL extension.
# Only work on some drivers. Works only with GLX backend.
# Known to be most effective on many drivers. Does not actually
# control paint timing,
# only buffer swap is affected, so it doesn’t have
# the effect of --sw-opti unlike other methods. Experimental.
# opengl-mswc: Try to VSync with MESA_swap_control OpenGL extension.
# Basically the same as opengl-swc above, except the extension we use.
# (Note some VSync methods may not be enabled at compile time.)
vsync = "opengl-swc";

# Enable DBE painting mode, intended to use with VSync
# to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;
# Painting on X Composite overlay window. Recommended.
paint-on-overlay = true;

# Limit compton to repaint at most once every 1 / refresh_rate
# second to boost performance.
# This should not be used with --vsync drm/opengl/opengl-oml as
# they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
sw-opti = false;

# Unredirect all windows if a full-screen opaque window is detected,
# to maximize performance for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
# paint-on-overlay may make the flickering less obvious.
unredir-if-possible = true;

# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [ ];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in
# the same group focused at the same time.
detect-transient = true;
# Use WM_CLIENT_LEADER to group windows, and consider windows in
# the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;

#################################
#
# Window type settings
#
#################################

wintypes:
{
    tooltip =
    {
        # fade: Fade the particular type of windows.
        fade = true;
        # shadow: Give those windows shadow
        shadow = false;
        # opacity: Default opacity for the type of windows.
        opacity = 0.85;
        # focus: Whether to always consider windows of this type focused.
        focus = true;
    };
};






Conky:

sudo yum install conky

git clone git://github.com/zenzire/conkyrc.git ~/.conky

ln -s ~/.conky/conkyrc ~/.conkyrc

ok



Configurar bindkeys de openbox:

Launcher:

sudo yum install gmrun

nano ~/.config/openbox/rc.xml en la seccion Keybinds agregar al final.

   <keybind key="A-F2">
      <action name="Execute">
        <command>gmrun</command>
      </action>
    </keybind>
  </keyboard>







####################################################

Varios-Aplicaciones:


sudo yum install -y gksu-polkit



##



Panel LXPanel: (falla)

yum install https://rpmfind.net/linux/Mandriva/devel/cooker/x86_64/media/main/release/lxpanel-0.5.9-7-mdv2012.0.x86_64.rpm



Instalar LXPanel desde deb:

http://linux.all.ec/blog/linux/425.html
https://www.svennd.be/cant-locate-extutilsmakemaker-pm-in-inc-centos-7/
https://todohacker.com/tutoriales/el-archivo-usrbin-la-instalacion-entra-conflicto-archivo-del-paquete-filesystem


yum install -y perl-devel rpm-build

nota: yum install perl-ExtUtils-MakeMaker (solo para lo requerido, probar)




Instalar WBar


wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/wbar/wbar_2.3.0-1_amd64.deb
wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/wbar/wbar-config_2.3.0-1_amd64.deb

alien -rkv adeskbar.0.4.3-all.deb










